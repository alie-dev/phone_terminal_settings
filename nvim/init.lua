--================================================================================
-- NEOVIM 초기화 설정 파일 (init.lua)
--================================================================================
-- 이 파일은 Neovim이 시작될 때 자동으로 로드되는 메인 설정 파일입니다.
-- ~/.config/nvim/init.lua 경로에 위치하며, 모든 설정의 진입점 역할을 합니다.

--================================================================================
-- 1) 기본 옵션 및 리더키 설정
--================================================================================
-- options.lua 파일에서 Neovim의 기본 설정들을 로드합니다.
-- 여기에는 일반적으로 다음과 같은 설정들이 포함됩니다:
-- - 줄 번호 표시, 들여쓰기, 탭 설정
-- - 검색 관련 옵션 (대소문자 구분, 하이라이트 등)
-- - 리더키 설정 (일반적으로 스페이스바나 쉼표)
-- - 기타 에디터 동작 관련 옵션들
require("options")

--================================================================================
-- 2) 플러그인 매니저 설정 (lazy.nvim)
--================================================================================
-- lazy.nvim은 현대적이고 성능이 뛰어난 Neovim 플러그인 매니저입니다.
-- 지연 로딩(lazy loading)을 통해 Neovim 시작 속도를 크게 개선합니다.

-- lazy.nvim 설치 경로를 설정합니다 (~/.local/share/nvim/lazy/lazy.nvim)
local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"

-- lazy.nvim이 설치되어 있지 않으면 자동으로 GitHub에서 클론합니다
-- 이를 "부트스트랩(bootstrap)" 과정이라고 합니다
if not vim.loop.fs_stat(lazypath) then
  -- Git을 사용하여 lazy.nvim 저장소를 클론
  -- --filter=blob:none: Git의 부분 클론 기능으로 다운로드 속도 향상
  -- --branch=stable: 안정적인 브랜치를 사용
  vim.fn.system({ "git","clone","--filter=blob:none",
    "https://github.com/folke/lazy.nvim.git","--branch=stable", lazypath })
end

-- lazy.nvim을 Neovim의 런타임 경로에 추가
-- 이렇게 해야 require()로 lazy.nvim을 사용할 수 있습니다
vim.opt.rtp:prepend(lazypath)

-- lazy.nvim을 초기화하고 플러그인들을 설정합니다
require("lazy").setup({
  -- spec: 플러그인 설정 명세를 정의
  -- import = "plugins": lua/plugins/ 디렉토리의 모든 .lua 파일을 자동으로 로드
  -- 이 방식을 사용하면 플러그인별로 파일을 분리하여 관리할 수 있습니다
  -- 예: lua/plugins/treesitter.lua, lua/plugins/lsp.lua 등
  spec = { { import = "plugins" } },
})

--================================================================================
-- 3) 자동저장 기능
--================================================================================
-- 파일이 변경되었을 때 자동으로 저장하는 기능을 활성화합니다.
-- auto_save.lua 파일에서 자동저장 관련 설정을 로드합니다.
-- 일반적으로 다음과 같은 상황에서 자동저장이 실행됩니다:
-- - 일정 시간 동안 입력이 없을 때
-- - 다른 버퍼로 전환할 때
-- - Neovim을 종료할 때
require("auto_save")

--================================================================================
-- 4) 키맵 및 모션 설정
--================================================================================
-- 사용자 정의 키 바인딩과 모션을 설정합니다.
-- keymaps.lua 파일에서 다음과 같은 설정들을 로드합니다:
-- - 기본 에디터 동작을 위한 키맵
-- - 플러그인 관련 키맵
-- - 커스텀 모션 및 텍스트 객체
-- - 윈도우 관리, 버퍼 탐색 등의 키맵
require("keymaps")

--================================================================================
-- 5) 컬러 테마 적용
--================================================================================
-- Neovim의 외관을 설정합니다.
-- onedark 컬러 스키마를 적용하여 어두운 테마를 사용합니다.
-- 이 명령어는 플러그인에서 제공하는 onedark 테마를 활성화합니다.
vim.cmd("colorscheme onedark")

--================================================================================
-- 6) Telescope 확장 로드
--================================================================================
-- Telescope는 강력한 fuzzy finder 플러그인입니다.
-- persisted 확장을 로드하여 세션 관리 기능을 추가합니다.
-- 이 확장을 통해 프로젝트별 세션을 저장하고 복원할 수 있습니다.
-- 주의: 이 명령어는 Neovim 시작 시 한 번만 실행되어야 합니다.
require("telescope").load_extension("persisted")
